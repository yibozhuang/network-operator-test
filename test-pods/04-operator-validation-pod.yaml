apiVersion: v1
kind: Pod
metadata:
  name: operator-validation
  labels:
    test: "true"
    scenario: "operator-validation"
spec:
  containers:
  - name: validation-test
    image: nicolaka/netshoot
    command:
      - /bin/bash
      - -c
      - |
        # Function to check operator status
        check_operator() {
          echo "=== Checking Operator Status ==="
          kubectl get pods -n nvidia-network-operator -o wide
          echo
          echo "Operator Logs:"
          kubectl logs -n nvidia-network-operator -l app.kubernetes.io/name=network-operator --tail=20
        }
        
        # Function to check CRDs
        check_crds() {
          echo "=== Checking CRDs ==="
          echo "NicClusterPolicy CRD:"
          kubectl get crd nicclusterpolicies.mellanox.com -o jsonpath='{.spec.versions[*].name}{"\n"}'
          
          echo "MacvlanNetwork CRD:"
          kubectl get crd macvlannetworks.mellanox.com -o jsonpath='{.spec.versions[*].name}{"\n"}'
          
          echo "HostDeviceNetwork CRD:"
          kubectl get crd hostdevicenetworks.mellanox.com -o jsonpath='{.spec.versions[*].name}{"\n"}'
          
          echo "NetworkAttachmentDefinition CRD:"
          kubectl get crd network-attachment-definitions.k8s.cni.cncf.io -o jsonpath='{.spec.versions[*].name}{"\n"}'
        }
        
        # Function to check network plugins
        check_plugins() {
          echo "=== Checking Network Plugins ==="
          echo "CNI Plugins in /opt/cni/bin/:"
          ls -l /etc/cni/net.d/
          
          echo
          echo "Network Attachment Definitions:"
          kubectl get network-attachment-definitions --all-namespaces -o wide
          
          echo
          echo "Multus Status:"
          kubectl get pods -n kube-system -l app=multus -o wide
          
          echo
          echo "Whereabouts Status:"
          kubectl get pods -n kube-system -l name=whereabouts -o wide
        }
        
        # Function to check resources
        check_resources() {
          echo "=== Checking Node Resources ==="
          kubectl get nodes -o custom-columns=NAME:.metadata.name,RDMA:.status.allocatable.\'nvidia\.com/rdma\'
          
          echo
          echo "Resource Quotas:"
          kubectl get resourcequota --all-namespaces
        }
        
        # Function to check policies
        check_policies() {
          echo "=== Checking Policies ==="
          echo "NicClusterPolicies:"
          kubectl get NicClusterPolicy -o wide
          
          echo
          echo "Latest Events:"
          kubectl get events --field-selector type=Warning --sort-by='.lastTimestamp' | tail -n 5
        }
        
        # Main monitoring loop
        while true; do
          echo "============================================="
          echo "Starting validation checks at $(date)"
          echo "============================================="
          
          check_operator
          echo
          check_crds
          echo
          check_plugins
          echo
          check_resources
          echo
          check_policies
          
          echo "============================================="
          echo "Checks completed at $(date)"
          echo "============================================="
          echo "Waiting 30 seconds before next check..."
          sleep 30
        done
    securityContext:
      capabilities:
        add: ["NET_ADMIN"]
    volumeMounts:
    - name: cni-conf
      mountPath: /etc/cni/net.d
    - name: kubeconfig
      mountPath: /root/.kube/config
      subPath: config
  volumes:
  - name: cni-conf
    hostPath:
      path: /etc/cni/net.d
  - name: kubeconfig
    secret:
      secretName: kubeconfig-secret
  serviceAccountName: operator-validator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: operator-validator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: operator-validator
rules:
- apiGroups: [""]
  resources: ["pods", "events", "nodes", "resourcequotas"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["mellanox.com"]
  resources: ["nicclusterpolicies", "macvlannetworks", "hostdevicenetworks"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["k8s.cni.cncf.io"]
  resources: ["network-attachment-definitions"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: operator-validator
subjects:
- kind: ServiceAccount
  name: operator-validator
  namespace: default
roleRef:
  kind: ClusterRole
  name: operator-validator
  apiGroup: rbac.authorization.k8s.io 